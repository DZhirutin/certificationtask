---
- name: Install python3, python3-pip, docker, docker-compose
  hosts: all
  become: yes
  gather_facts: False
  tasks:
    - name: Install python3, python3-pip, docker
      vars:
        ansible_python_interpreter: /usr/bin/python3
      apt:
        pkg:
          - python3-pip
          - python3
          - docker.io
        update_cache: yes
        state: present
    - name: Install Docker-compose
      get_url: 
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-{{lookup('pipe', 'uname -m')}}
        dest: /usr/local/bin/docker-compose
        mode: +x
    - name: Start docker daemon
      systemd:
        name: docker
        state: started
    - name: Install docker python module
      pip:
        name: 
          - docker
          - docker-compose

- name: Build app
  hosts: tag_Name_build_server
  become: yes
  gather_facts: False
  tasks: 
    - name: Update repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Install default-jdk git maven
      apt:
        pkg: 
          - default-jdk
          - git
          - maven

    - name: Download project from github
      git:
       repo: https://github.com/DZhirutin/certificationtask.git
       dest: /tmp/certificationtask/
    - name: build app maven
      command: mvn package
      args:
       chdir: /tmp/certificationtask/
    
    - name: copy Dockerfile
      copy:
        src: ./Dockerfile
        dest: /tmp/certificationtask/
        owner: root
        group: root
        mode: '0644'

    - name: build container image
      docker_image:
        name: myapp:1.0
        build_path: /tmp/certificationtask/

    - name: archive container image as a tarball
      docker_image:
        name: myapp:1.0
        archive_path: /tmp/myapp:1.0.tar
        source: pull
        state: present
        timeout: 600
    - name: Copy .tar file from remote host to local host
      synchronize:  src={{ item }} dest=./ mode=pull
      with_items:
       - "/tmp/myapp:1.0.tar"

- name: Prod app
  hosts: tag_Name_prod_server
  become: yes
  gather_facts: no
  tasks:
    - name: copy tarball to Prod
      copy:
        src: ./myapp:1.0.tar
        dest: /tmp/myapp:1.0.tar

    - name: load container from tarball
      docker_image:
        name: myapp:1.0.tar
        load_path: /tmp/myapp:1.0.tar
        state: present
        source: load

    - name: load image
      docker_container:
        name: myapp
        image: myapp:1.0
        ports: 
          - "8083:8080"




    
